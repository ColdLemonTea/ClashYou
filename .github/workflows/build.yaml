name: CI Builds
on:
  push:
    branches:
      - main
    paths-ignore:
      # - '.github/**'
      - '.idea/**'
      - '.gitattributes'
      - '.gitignore'
      - '.gitmodules'
      - '**.md'
      - 'LICENSE'
      - 'NOTICE'
  pull_request:
    paths-ignore:
      # - '.github/**'
      - '.idea/**'
      - '.gitattributes'
      - '.gitignore'
      - '.gitmodules'
      - '**.md'
      - 'LICENSE'
      - 'NOTICE'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: 17

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 'stable'

      - name: Cache Go Files
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        # with:
          # arguments: --no-daemon assemble

      - name: Build with Gradle
        run: |
          ./gradlew --no-daemon assemble

      - name: Find APKs
        run: |
          echo "APK_FILE_RELEASE_ARM32=$(find app/build/outputs/apk/foss/release -name '*armeabi-v7a*')" >> $GITHUB_ENV
          echo "APK_FILE_RELEASE_ARM64=$(find app/build/outputs/apk/foss/release -name '*arm64-v8a*')" >> $GITHUB_ENV
          echo "APK_FILE_RELEASE_X86=$(find app/build/outputs/apk/foss/release -name '*x86-*')" >> $GITHUB_ENV
          echo "APK_FILE_RELEASE_X64=$(find app/build/outputs/apk/foss/release -name '*x86_64*')" >> $GITHUB_ENV
          echo "APK_FILE_RELEASE_UNIVERSAL=$(find app/build/outputs/apk/foss/release -name '*universal*')" >> $GITHUB_ENV
          echo "APK_FILE_DEBUG_ARM32=$(find app/build/outputs/apk/foss/debug -name '*armeabi-v7a*')" >> $GITHUB_ENV
          echo "APK_FILE_DEBUG_ARM64=$(find app/build/outputs/apk/foss/debug -name '*arm64-v8a*')" >> $GITHUB_ENV
          echo "APK_FILE_DEBUG_X86=$(find app/build/outputs/apk/foss/debug -name '*x86-*')" >> $GITHUB_ENV
          echo "APK_FILE_DEBUG_X64=$(find app/build/outputs/apk/foss/debug -name '*x86_64*')" >> $GITHUB_ENV
          echo "APK_FILE_DEBUG_UNIVERSAL=$(find app/build/outputs/apk/foss/debug -name '*universal*')" >> $GITHUB_ENV

      - name: Upload Release APK (armeabi-v7a)
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.APK_FILE_RELEASE_ARM32 }}

      - name: Upload Release APK (arm64-v8a)
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.APK_FILE_RELEASE_ARM64 }}

      - name: Upload Release APK (x86)
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.APK_FILE_RELEASE_X86 }}

      - name: Upload Release APK (x86_64)
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.APK_FILE_RELEASE_X64 }}

      - name: Upload Release APK (Universal)
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.APK_FILE_RELEASE_UNIVERSAL }}

      - name: Upload Debug APK (armeabi-v7a)
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.APK_FILE_DEBUG_ARM32 }}

      - name: Upload Debug APK (arm64-v8a)
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.APK_FILE_DEBUG_ARM64 }}

      - name: Upload Debug APK (x86)
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.APK_FILE_DEBUG_X86 }}

      - name: Upload Debug APK (x86_64)
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.APK_FILE_DEBUG_X64 }}

      - name: Upload Debug APK (Universal)
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.APK_FILE_DEBUG_UNIVERSAL }}
